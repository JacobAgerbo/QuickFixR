pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RePu") +
scale_color_brewer(palette = "RePu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "PuRd") +
scale_color_brewer(palette = "PuRd") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RdPu") +
scale_color_brewer(palette = "RdPu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RdBu") +
scale_color_brewer(palette = "RdBu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "OrRd") +
scale_color_brewer(palette = "OrRD") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "OrRd") +
scale_color_brewer(palette = "OrRd") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RdBu") +
scale_color_brewer(palette = "RdBu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RdPu") +
scale_color_brewer(palette = "RdPu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
#pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
#dev.off()
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location,  nrow = 1)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RdPu") +
scale_color_brewer(palette = "RdPu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location,  nrow = 1)
pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
dev.off()
set.seed(1) # This makes the plot appear the same each time it is run
my_pal <- c("#8D929D","#C65B5B","#00A08A", "#FFA44F","#007057","#C6A5B1","#2BF1DB","#6F6F6F") # very important...
MAGs_ps = subset_taxa(physeq.tmp, Phylum != "Other")
Mycoplasma_ps = subset_taxa(physeq.tmp, Genus == "Mycoplasma")
# how much is explained by NOT others?
mean(round(colSums(MAGs_ps@otu_table@.Data),5)*100) # 99.98%
#How much is Mycoplasma
mean(round(colSums(Mycoplasma_ps@otu_table@.Data),5)*100) # 90.67%
#How much is NWS_MAG_0006
round(mean(Mycoplasma_ps@otu_table@.Data[4,]),5)*100 # 83.41%
p_gut = plot_bar(MAGs_ps, "Sample", fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "Paired") +
scale_color_brewer(palette = "Paired") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
#p_gut + facet_wrap(~Location, scales = "free", nrow = 1)
#p_gut + facet_wrap(~Sex, scales = "free", nrow = 1)
#p_gut + facet_wrap(~Stomach_Content, scales = "free", nrow = 1)
GP.ord <- ordinate(MAGs_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa = plot_ordination(MAGs_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Microbiota composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa + facet_wrap(~Location, nrow = 1)
pcoa = plot_ordination(MAGs_ps, GP.ord, type="samples",
color="Location",
label="ID",
shape = "Tapeworm"
title="Microbiota composition of wild Norwegian salmon") +
pcoa = plot_ordination(MAGs_ps, GP.ord, type="samples",
color="Location",
label="ID",
shape = "Tapeworm",
title="Microbiota composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa + facet_wrap(~Location, nrow = 1)
pcoa = plot_ordination(MAGs_ps, GP.ord, type="samples",
color="Location",
label="ID",
shape = "Nematode",
title="Microbiota composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa + facet_wrap(~Location, nrow = 1)
pcoa = plot_ordination(MAGs_ps, GP.ord, type="samples",
color="Location",
label="ID",
shape = "Stomach_Content",
title="Microbiota composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa + facet_wrap(~Location, nrow = 1)
pcoa = plot_ordination(MAGs_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Microbiota composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa + facet_wrap(~Location, nrow = 1)
set.seed(1) # This makes the plot appear the same each time it is run
Mycoplasma_ps@tax_table@.Data[,7] <- rownames(Mycoplasma_ps@tax_table@.Data)
p_Mycoplasma = plot_bar(Mycoplasma_ps, "Sample", fill = "Species") +
geom_bar(aes(color=Species, fill=Species), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "RdPu") +
scale_color_brewer(palette = "RdPu") +
labs(x = "Individuals") +
labs(y = "Relative MAG Abundance")
p_Mycoplasma = p_Mycoplasma + facet_wrap(~Location, scales = "free", nrow = 1)
GP.ord <- ordinate(Mycoplasma_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mycoplasma = plot_ordination(Mycoplasma_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Mycoplasma composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pcoa_Mycoplasma = pcoa_Mycoplasma + facet_wrap(~Location,  nrow = 1)
pdf("Mycoplasma_Composition.pdf", height = 6, width = 12)
plot_grid(p_Mycoplasma,pcoa_Mycoplasma, nrow = 2, labels = 'AUTO')
dev.off()
p1_1 <- p_gut + facet_wrap(~Location, scales = "free", nrow = 1)
p1_2 <- pcoa #+ facet_wrap(~Location, scales = "free", nrow = 1)
# Make PDF
pdf("MAG_Composition.pdf", height = 6, width = 12)
plot_grid(p1_1,p1_2, nrow = 2, labels = 'AUTO')
dev.off()
# Make PDF
#pdf("MAG_Composition.pdf", height = 6, width = 12)
plot_grid(p1_1,p1_2, nrow = 2, labels = 'AUTO')
pcoa + facet_wrap(~Location, nrow = 1)
p1_1 <- p_gut + facet_wrap(~Location, scales = "free", nrow = 1)
p1_2 <- pcoa + facet_wrap(~Location, nrow = 1)
# Make PDF
#pdf("MAG_Composition.pdf", height = 6, width = 12)
plot_grid(p1_1,p1_2, nrow = 2, labels = 'AUTO')
#dev.off()
p1_1 <- p_gut + facet_wrap(~Location, scales = "free", nrow = 1)
p1_2 <- pcoa + facet_wrap(~Location, nrow = 1)
# Make PDF
pdf("MAG_Composition.pdf", height = 6, width = 12)
plot_grid(p1_1,p1_2, nrow = 2, labels = 'AUTO')
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ComplexHeatmap)
library(tidyverse)
library(readxl)
library(corrplot)
library(cowplot)
library(Matrix)
library(psych)
MAGs <- read_xlsx("MAG_coverage.xlsx")
Bin_Sum <- read_xlsx("bins_summary.xlsx")
# Tidy up df
MAGs <- as.matrix(MAGs)
rownames(MAGs) <- MAGs[,1]
MAGs <- MAGs[,-c(1)]
class(MAGs) <- "numeric"
### TMP normalisation
size <- data.frame(hgnc_symbol = Bin_Sum$MAG, transcript_length = Bin_Sum$total_length)
MAGs.tmp <- ADImpute::NormalizeTPM(MAGs, tr_length = size, scale = 1e+06) # the scale is just a constant, which can be changed, i added a million, so the total sum for each sample i 1.
colSums(MAGs.tmp) # check Sample sum
rownames(coverage) <- df$MAG_unique_id
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
df <- read_excel("KoFAM_Coverage.xlsx")
tax <- read_excel("MAG_Tax.xlsx")
coverage <- df[,(16:90)]
colnames(coverage) <- str_remove(colnames(coverage), "_OUT_avg_coverage")
colnames(coverage) <- str_remove(colnames(coverage), "_ALL")
coverage.norm <- sweep(coverage, 2, colSums(coverage), FUN="/")
coverage.norm <- scale(coverage.norm, center=FALSE, scale=colSums(coverage.norm))
df$MAG_unique_id <- paste(df$bin_name, df$unique_id, sep = ": ")
#rownames(coverage.sd) <- paste(df$bin_name, df$module_category, sep = ": ")
#  First find the desired quantile breaks for the entire matrix
qt <- quantile(coverage.norm , probs = c(0.10,0.9) )
# 20%  80%
#-0.238 -0.141
#  Next get a logical vector of the rows that have any values outside these breaks
rows <- apply(coverage.norm , 1 , function(x) any( x < qt[1] | x > qt[2] ) )
table(rows) # removing 689 low variant KoFams
#  Subset on this vector
rownames(coverage.norm) <- df$MAG_unique_id
coverage.filtered <- coverage[rows, ]
coverage.sd <- log(as.matrix(coverage.filtered)+1)
#
df.filtered <- df[match(rownames(coverage.filtered),df$MAG_unique_id),]
rownames(coverage.sd) <- df.filtered$module_name
KEGG_Class <- df$module_category
names(KEGG_Class) <- df$bin_name
Tax_Class <- df$Tax_Genus
names(Tax_Class) <- df$bin_name
suppressPackageStartupMessages(library('ggplot2'))
suppressPackageStartupMessages(library('reshape2'))
suppressPackageStartupMessages(library('reshape'))
suppressPackageStartupMessages(library('gridExtra'))
suppressPackageStartupMessages(library('grid'))
suppressPackageStartupMessages(library('plyr'))
suppressPackageStartupMessages(library('gtools'))
cols <- c("AA" = "orange",
"TT" = "pink",
"CC" = "yellow",
"GG" = "green",
'N' = 'black',
'AC' = "#89C5DA",
'CA' = "#89C5DA",
'AG' = "#DA5724",
'GA' = "#DA5724",
'AT' = "#74D944",
'TA' = "#74D944",
'CG' = "#CE50CA",
'GC' = "#CE50CA",
'CT' = "#5F4991",
'TC' = "#5F4991",
'TG' = "#C0717C",
'GT' = "#C0717C")
transversion_vs_transition_colors <- c('transversion' = "#451910",
'transition' = '#8C8983')
profile = 'NWS_MAG_00006-SNVs.txt'
density = 'NWS_MAG_00006-SNV-density.txt'
num_entries = 150
genome_size = 876389
if(invalid(num_entries)){
num_entries = 0
}
variability_profile <- as.data.frame(read.csv(profile, header=TRUE, sep="\t"))
variability_density <- as.data.frame(read.csv(density, header=TRUE, sep="\t"))
setwd("/Volumes/J/NW/Ne/0/Mu/SNVs/01_Only_Host_Genotype/90p_individuals")
setwd("/Volumes/Jacob_Agerbo_HD/NWS/New_Take/07-Anvio/Mutation_Analysis_Host_Myco/SNVs/01_Only_Host_Genotype/90p_individuals")
variability_profile <- as.data.frame(read.csv(profile, header=TRUE, sep="\t"))
QuickFixR::QuickFix()
devtools::install_github("JacobAgerbo/QuickFixR")
QuickFixR::QuickFix()
QuickFixR::QuickFix()
library(QuickFixR)
QuickFix()
library(phyloseq)
microbe <- MAE[["MicrobeGenetics"]]
setwd("Documents/GitHub/QuickFixR/inst/shiny/extdata/")
MAE <- load("MAE.rds")
MAE <- readRDS("MAE.rds")
microbe <- MAE[["MicrobeGenetics"]]
tax_table <- as.data.frame(rowData(microbe))
sam_table <- as.data.frame(colData(microbe))
voi <- sam_table[,variable]
null_hypothesis = voi[1]
counts_table <- as.data.frame(assays(microbe))[, rownames(sam_table)]
View(sam_table)
phy_seq <- physeq <- phyloseq(otu_table(microbe,taxa_are_rows=TRUE),
tax_table(tax_table),
sample_data(sam_table))
phy_seq <- physeq <- phyloseq(otu_table(microbe,taxa_are_rows=TRUE),
tax_table(tax_table),
sample_data(sam_table))
physeq <- phyloseq(otu_table(microbe,taxa_are_rows=TRUE),
tax_table(tax_table),
sample_data(sam_table))
physeq <- phyloseq(otu_table(microbe,taxa_are_rows=TRUE),
tax_table(tax_table),
sample_data(sam_table))
otu_table(microbe,taxa_are_rows=TRUE)
physeq <- phyloseq(otu_table(counts_table,taxa_are_rows=TRUE),
tax_table(tax_table),
sample_data(sam_table))
physeq <- phyloseq(otu_table(as.matrix(counts_table),taxa_are_rows=TRUE),
tax_table(as.matrix(tax_table)),
sample_data(sam_table))
ig <- make_network(physeq, max.dist=0.3)
plot_network(ig, physeq)
View(sam_table)
plot_network(ig, physeq, color = "Sex", shape="Group")
plot_network(ig, physeq, color = "SEX", shape="GROUP")
ig <- make_network(physeq, max.dist=0.3, distance = "unifrac")
library("ape")
random_tree = rtree(ntaxa(physeq), rooted=TRUE, tip.label=taxa_names(physeq))
physeq = merge_phyloseq(physeq, random_tree)
ig <- make_network(physeq, max.dist=0.3, distance = "unifrac")
plot_network(ig, physeq, color = "SEX", shape="GROUP")
plot_network(ig, physeq, color = "SEX", shape="GROUP",label=NULL)
plot_network
plot.nw <- plot_network(ig, physeq, color = "SEX", shape="GROUP",label=NULL)
library(plotly)
ggplotly(plot.nw)
View(sam_table)
plot.nw <- plot_network(ig, physeq, color = "SEX", shape="GROUP", size = "AGE",label=NULL)
plot.nw <- plot_network(ig, physeq, color = "SEX",
shape="GROUP",
line_weight = 0.5,
label=NULL,
layout.method = )
plot.nw <- plot_network(ig, physeq, color = "SEX",
shape="GROUP",
line_weight = 0.5,
label=NULL,
layout.method = "layout.fruchterman.reingold")
plot.nw <- plot_network(ig, physeq, color = "SEX",
shape="GROUP",
line_weight = 0.5,
label=NULL,
layout.method="layout.fruchterman.reingold")
plot.nw <- plot_network(ig, physeq, color = "SEX",
shape="GROUP",
line_weight = 0.5,
label=NULL)
plot.nw
library(plotly)
ggplotly(plot.nw)
library("ape")
random_tree = rtree(ntaxa(physeq), rooted=TRUE, tip.label=taxa_names(physeq))
physeq = merge_phyloseq(physeq, random_tree)
Network <- make_network(physeq, max.dist=0.3, distance = "unifrac")
plot.nw <- plot_network(Network, physeq, color = "SEX",
shape="GROUP",
line_weight = 0.5,
label=NULL)
library(plotly)
ggplotly(plot.nw)
